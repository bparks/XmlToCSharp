// using System.Xml.Serialization;
// XmlSerializer serializer = new XmlSerializer(typeof(Realestates));
// using (StringReader reader = new StringReader(xml))
// {
//    var test = (Realestates)serializer.Deserialize(reader);
// }

[XmlRoot(ElementName="additionalCosts")]
public class AdditionalCosts { 

	[XmlElement(ElementName="value")] 
	public double Value { get; set; } 

	[XmlElement(ElementName="currency")] 
	public string Currency { get; set; } 

	[XmlElement(ElementName="marketingType")] 
	public string MarketingType { get; set; } 

	[XmlElement(ElementName="priceIntervalType")] 
	public string PriceIntervalType { get; set; } 
}

[XmlRoot(ElementName="realestates")]
public class Realestates { 

	[XmlElement(ElementName="externalId")] 
	public int ExternalId { get; set; } 

	[XmlElement(ElementName="title")] 
	public string Title { get; set; } 

	[XmlElement(ElementName="creationDate")] 
	public DateTime CreationDate { get; set; } 

	[XmlElement(ElementName="lastModificationDate")] 
	public DateTime LastModificationDate { get; set; } 

	[XmlElement(ElementName="thermalCharacteristic")] 
	public double ThermalCharacteristic { get; set; } 

	[XmlElement(ElementName="energyConsumptionContainsWarmWater")] 
	public string EnergyConsumptionContainsWarmWater { get; set; } 

	[XmlElement(ElementName="buildingEnergyRatingType")] 
	public string BuildingEnergyRatingType { get; set; } 

	[XmlElement(ElementName="additionalArea")] 
	public double AdditionalArea { get; set; } 

	[XmlElement(ElementName="numberOfFloors")] 
	public string NumberOfFloors { get; set; } 

	[XmlElement(ElementName="additionalCosts")] 
	public AdditionalCosts AdditionalCosts { get; set; } 
}

